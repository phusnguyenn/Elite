
<ul class="pagination">
    @{
        double _pageCount = 0;
        if (Model.TotalCount % Model.PageSize == 0)
        {
            _pageCount = (double)((Model.TotalCount) / Model.PageSize);
        }
        else if (Model.TotalCount % Model.PageSize > 0)
        {
            _pageCount = ((double)((Model.TotalCount) / Model.PageSize)) + 1;
        }
        int pageCount = _pageCount - (Math.Round(_pageCount)) != 0 ? (int)(_pageCount + 1) : (int)_pageCount;

        string classNameForNext = Model.CurrentPage == _pageCount ? "disabled" : string.Empty;
        string classNameForPrevious = Model.CurrentPage == 1 ? "disabled" : string.Empty;
    }
    <li class="@classNameForPrevious">
        @if (classNameForPrevious == string.Empty)
        {
            @Html.ActionLink("« Prev", "Product", new { page = (Model.CurrentPage - 1) })}
        else
        {
            <a>« Prev</a>}

    </li>

    @for (int pages = 1; pages <= pageCount; pages++)
    {
        string active = "";
        if (pages == Model.CurrentPage) { active = "active"; }
        <li class="@active">@Html.ActionLink(pages.ToString(), "Product", new { page = pages })</li>
    }
    <li class="@classNameForNext">
        @if (classNameForNext == string.Empty)
        {
            @Html.ActionLink("Next »", "Product", new { page = (Model.CurrentPage + 1) })}
        else
        {
            <a>Next »</a>
        }
    </li>
</ul>
